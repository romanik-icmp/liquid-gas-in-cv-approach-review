%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, February 7, 2023 at 10:40:46 PM Eastern European Standard Time
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
500 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
500.000 0 l
500.000 500.000 l
0 500.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
1 0 500 500 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] concat
0 0 490 490 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
64.0000 6.01670 420.985 476.983 rc
0.470588 0 0.0549020 RG
newpath
67.0680 104.013 m
67.1360 425.588 l
67.2040 425.666 l
67.2720 425.677 l
67.4081 425.745 l
67.5441 425.737 l
67.8162 425.727 l
68.0882 425.713 l
68.6324 425.672 l
69.1765 425.614 l
70.1234 425.475 l
71.0704 425.285 l
73.2002 424.678 l
75.3441 423.812 l
77.4778 422.697 l
79.4560 421.438 l
81.5044 419.906 l
83.6228 418.078 l
85.7344 416.010 l
87.9065 413.627 l
89.8196 411.314 l
91.9734 408.471 l
94.1360 405.363 l
96.2201 402.129 l
98.1126 398.990 l
100.363 395.008 l
102.269 391.426 l
104.487 387.020 l
106.449 382.906 l
108.603 378.166 l
110.654 373.435 l
112.794 368.276 l
114.759 363.341 l
116.878 357.811 l
119.080 351.846 l
120.996 346.473 l
123.066 340.488 l
125.204 334.113 l
127.296 327.695 l
129.320 321.321 l
131.568 314.065 l
133.587 307.392 l
135.743 300.119 l
137.697 293.406 l
139.833 285.943 l
141.843 278.815 l
143.944 271.266 l
145.998 263.802 l
148.148 255.914 l
150.219 248.259 l
152.337 240.389 l
154.437 232.558 l
156.367 225.354 l
158.579 217.106 l
160.557 209.752 l
162.667 201.954 l
164.686 194.548 l
166.927 186.411 l
168.869 179.456 l
171.072 171.684 l
173.080 164.730 l
175.277 157.287 l
177.172 151.015 l
179.330 144.061 l
181.415 137.551 l
183.499 131.264 l
185.575 125.233 l
187.569 119.672 l
189.725 113.929 l
191.780 108.727 l
193.942 103.550 l
195.900 99.1367 l
198.063 94.5672 l
200.136 90.5009 l
202.203 86.7518 l
204.362 83.1672 l
206.351 80.1667 l
208.388 77.3931 l
210.636 74.6812 l
212.673 72.5400 l
214.755 70.6547 l
216.872 69.0472 l
218.819 67.8389 l
220.894 66.8269 l
222.953 66.0953 l
225.156 65.6019 l
227.099 65.4041 l
229.342 65.4393 l
231.366 65.7002 l
233.368 66.1597 l
235.522 66.8629 l
237.684 67.7712 l
239.651 68.7596 l
241.740 69.9638 l
243.778 71.2781 l
245.988 72.8417 l
247.900 74.2979 l
250.097 76.0730 l
252.161 77.8272 l
254.206 79.6324 l
256.252 81.4936 l
258.339 83.4351 l
260.551 85.5264 l
262.580 87.4618 l
264.582 89.3780 l
266.722 91.4216 l
268.858 93.4447 l
270.775 95.2381 l
273.046 97.3247 l
274.946 99.0315 l
277.168 100.973 l
279.289 102.765 l
281.183 104.308 l
283.313 105.973 l
285.457 107.569 l
287.591 109.071 l
289.569 110.384 l
291.617 111.659 l
293.736 112.883 l
295.847 114.006 l
298.019 115.058 l
299.932 115.896 l
302.086 116.740 l
304.249 117.480 l
306.333 118.092 l
308.225 118.562 l
310.476 119.015 l
312.382 119.311 l
314.600 119.554 l
316.563 119.682 l
318.716 119.730 l
320.767 119.688 l
322.907 119.556 l
324.872 119.359 l
326.991 119.070 l
329.193 118.687 l
331.109 118.291 l
333.179 117.800 l
335.318 117.230 l
337.410 116.614 l
339.434 115.969 l
341.681 115.200 l
343.700 114.468 l
345.856 113.649 l
347.810 112.878 l
349.946 112.008 l
351.956 111.169 l
354.057 110.276 l
356.111 109.393 l
358.261 108.462 l
360.332 107.565 l
362.450 106.651 l
364.550 105.755 l
366.480 104.943 l
368.692 104.031 l
370.671 103.237 l
372.780 102.416 l
374.799 101.659 l
377.041 100.856 l
378.982 100.195 l
381.185 99.4863 l
383.193 98.8819 l
385.390 98.2689 l
387.285 97.7821 l
389.444 97.2771 l
391.529 96.8409 l
393.612 96.4568 l
395.688 96.1265 l
397.682 95.8590 l
399.838 95.6250 l
401.893 95.4554 l
404.056 95.3327 l
406.013 95.2704 l
408.177 95.2547 l
410.249 95.2907 l
412.316 95.3749 l
414.475 95.5127 l
416.464 95.6827 l
418.501 95.8978 l
420.750 96.1810 l
422.786 96.4761 l
424.868 96.8133 l
426.986 97.1902 l
428.932 97.5642 l
431.007 97.9891 l
433.066 98.4347 l
435.269 98.9343 l
437.213 99.3920 l
439.455 99.9360 l
441.479 100.438 l
443.482 100.943 l
445.635 101.492 l
447.797 102.046 l
449.764 102.548 l
451.853 103.079 l
453.892 103.590 l
456.101 104.135 l
458.014 104.595 l
460.210 105.109 l
462.274 105.575 l
464.319 106.018 l
466.365 106.441 l
468.452 106.850 l
470.665 107.257 l
472.693 107.604 l
474.695 107.920 l
476.836 108.230 l
478.971 108.507 l
480.985 108.739 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
64.0000 6.01670 420.985 476.983 rc
0 0.0549020 0.470588 RG
newpath
67.0680 104.013 m
67.1360 380.019 l
67.2040 372.268 l
67.2720 371.913 l
67.4081 371.933 l
67.5441 371.929 l
67.8162 371.925 l
68.0882 371.917 l
68.6324 371.895 l
69.1765 371.863 l
70.1234 371.786 l
71.0704 371.682 l
73.2002 371.348 l
75.3441 370.870 l
77.4778 370.255 l
79.4560 369.558 l
81.5044 368.708 l
83.6228 367.690 l
85.7344 366.534 l
87.9065 365.196 l
89.8196 363.892 l
91.9734 362.280 l
94.1360 360.508 l
96.2201 358.653 l
98.1126 356.840 l
100.363 354.526 l
102.269 352.427 l
104.487 349.825 l
106.449 347.375 l
108.603 344.527 l
110.654 341.656 l
112.794 338.493 l
114.759 335.437 l
116.878 331.975 l
119.080 328.196 l
120.996 324.751 l
123.066 320.867 l
125.204 316.676 l
127.296 312.398 l
129.320 308.090 l
131.568 303.112 l
133.587 298.465 l
135.743 293.320 l
137.697 288.496 l
139.833 283.047 l
141.843 277.754 l
143.944 272.054 l
145.998 266.318 l
148.148 260.146 l
150.219 254.044 l
152.337 247.652 l
154.437 241.168 l
156.367 235.091 l
158.579 227.998 l
160.557 221.547 l
162.667 214.571 l
164.686 207.813 l
166.927 200.234 l
168.869 193.622 l
171.072 186.083 l
173.080 179.199 l
175.277 171.677 l
177.172 165.213 l
179.330 157.904 l
181.415 150.921 l
183.499 144.045 l
185.575 137.318 l
187.569 130.998 l
189.725 124.347 l
191.780 118.208 l
193.942 111.983 l
195.900 106.580 l
198.063 100.886 l
200.136 95.7276 l
202.203 90.8867 l
204.362 86.1739 l
206.351 82.1574 l
208.388 78.3773 l
210.636 74.6058 l
212.673 71.5616 l
214.755 68.8165 l
216.872 66.4072 l
218.819 64.5312 l
220.894 62.8840 l
222.953 61.6025 l
225.156 60.6103 l
227.099 60.0490 l
229.342 59.7523 l
231.366 59.7917 l
233.368 60.1015 l
235.522 60.7165 l
237.684 61.6067 l
239.651 62.6352 l
241.740 63.9351 l
243.778 65.3904 l
245.988 67.1530 l
247.900 68.8150 l
250.097 70.8588 l
252.161 72.8918 l
254.206 74.9928 l
256.252 77.1650 l
258.339 79.4347 l
260.551 81.8813 l
262.580 84.1454 l
264.582 86.3860 l
266.722 88.7731 l
268.858 91.1330 l
270.775 93.2218 l
273.046 95.6478 l
274.946 97.6288 l
277.168 99.8791 l
279.289 101.951 l
281.183 103.732 l
283.313 105.652 l
285.457 107.489 l
287.591 109.217 l
289.569 110.726 l
291.617 112.190 l
293.736 113.597 l
295.847 114.888 l
298.019 116.099 l
299.932 117.066 l
302.086 118.043 l
304.249 118.904 l
306.333 119.620 l
308.225 120.176 l
310.476 120.719 l
312.382 121.081 l
314.600 121.391 l
316.563 121.569 l
318.716 121.660 l
320.767 121.650 l
322.907 121.543 l
324.872 121.359 l
326.991 121.074 l
329.193 120.687 l
331.109 120.278 l
333.179 119.765 l
335.318 119.162 l
337.410 118.505 l
339.434 117.812 l
341.681 116.981 l
343.700 116.185 l
345.856 115.290 l
347.810 114.442 l
349.946 113.481 l
351.956 112.550 l
354.057 111.555 l
356.111 110.566 l
358.261 109.519 l
360.332 108.505 l
362.450 107.469 l
364.550 106.447 l
366.480 105.518 l
368.692 104.471 l
370.671 103.555 l
372.780 102.604 l
374.799 101.723 l
377.041 100.785 l
378.982 100.009 l
381.185 99.1738 l
383.193 98.4582 l
385.390 97.7288 l
387.285 97.1467 l
389.444 96.5397 l
391.529 96.0120 l
393.612 95.5439 l
395.688 95.1380 l
397.682 94.8055 l
399.838 94.5102 l
401.893 94.2910 l
404.056 94.1257 l
406.013 94.0333 l
408.177 93.9936 l
410.249 94.0157 l
412.316 94.0948 l
414.475 94.2362 l
416.464 94.4176 l
418.501 94.6519 l
420.750 94.9646 l
422.786 95.2935 l
424.868 95.6720 l
426.986 96.0969 l
428.932 96.5202 l
431.007 97.0025 l
433.066 97.5094 l
435.269 98.0788 l
437.213 98.6010 l
439.455 99.2224 l
441.479 99.7970 l
443.482 100.374 l
445.635 101.002 l
447.797 101.636 l
449.764 102.212 l
451.853 102.819 l
453.892 103.405 l
456.101 104.029 l
458.014 104.556 l
460.210 105.145 l
462.274 105.679 l
464.319 106.187 l
466.365 106.673 l
468.452 107.143 l
470.665 107.611 l
472.693 108.010 l
474.695 108.375 l
476.836 108.732 l
478.971 109.053 l
480.985 109.323 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
64.0000 6.01670 420.985 476.983 rc
0.290196 0.470588 0 RG
newpath
67.0680 436.646 m
67.1020 980.000 l
67.1700 980.000 l
67.2040 301.575 l
67.2040 301.575 l
67.2720 322.992 l
67.4081 329.343 l
67.5441 330.324 l
67.6801 330.589 l
67.8162 330.682 l
67.9522 330.721 l
68.0882 330.739 l
68.6324 330.748 l
69.1765 330.735 l
70.1234 330.693 l
71.0704 330.635 l
73.2002 330.448 l
75.3441 330.181 l
77.4778 329.837 l
79.4560 329.446 l
81.5044 328.968 l
83.6228 328.395 l
85.7344 327.743 l
87.9065 326.986 l
89.8196 326.246 l
91.9734 325.329 l
94.1360 324.316 l
96.2201 323.252 l
98.1126 322.207 l
100.363 320.868 l
102.269 319.647 l
104.487 318.126 l
106.449 316.685 l
108.603 315.000 l
110.654 313.291 l
112.794 311.395 l
114.759 309.550 l
116.878 307.443 l
119.080 305.124 l
120.996 302.993 l
123.066 300.569 l
125.204 297.928 l
127.296 295.206 l
129.320 292.436 l
131.568 289.199 l
133.587 286.142 l
135.743 282.716 l
137.697 279.464 l
139.833 275.744 l
141.843 272.082 l
143.944 268.082 l
145.998 263.997 l
148.148 259.533 l
150.219 255.050 l
152.337 250.274 l
154.437 245.346 l
156.367 240.648 l
158.579 235.064 l
160.557 229.889 l
162.667 224.186 l
164.686 218.552 l
166.927 212.100 l
168.869 206.353 l
171.072 199.660 l
173.080 193.411 l
175.277 186.430 l
177.172 180.296 l
179.330 173.204 l
181.415 166.268 l
183.499 159.275 l
185.575 152.272 l
187.569 145.538 l
189.725 138.282 l
191.780 131.421 l
193.942 124.297 l
195.900 117.966 l
198.063 111.136 l
200.136 104.798 l
202.203 98.7112 l
204.362 92.6421 l
206.351 87.3467 l
208.388 82.2468 l
210.636 77.0290 l
212.673 72.7055 l
214.755 68.7002 l
216.872 65.0767 l
218.819 62.1579 l
220.894 59.4882 l
222.953 57.2924 l
225.156 55.4414 l
227.099 54.2290 l
229.342 53.3075 l
231.366 52.8995 l
233.368 52.8727 l
235.522 53.2392 l
237.684 53.9914 l
239.651 54.9843 l
241.740 56.3324 l
243.778 57.9111 l
245.988 59.8826 l
247.900 61.7796 l
250.097 64.1457 l
252.161 66.5232 l
254.206 68.9968 l
256.252 71.5654 l
258.339 74.2562 l
260.551 77.1604 l
262.580 79.8483 l
264.582 82.5064 l
266.722 85.3345 l
268.858 88.1250 l
270.775 90.5895 l
273.046 93.4451 l
274.946 95.7706 l
277.168 98.4056 l
279.289 100.825 l
281.183 102.900 l
283.313 105.131 l
285.457 107.262 l
287.591 109.262 l
289.569 111.006 l
291.617 112.697 l
293.736 114.321 l
295.847 115.812 l
298.019 117.211 l
299.932 118.330 l
302.086 119.464 l
304.249 120.467 l
306.333 121.308 l
308.225 121.965 l
310.476 122.617 l
312.382 123.061 l
314.600 123.454 l
316.563 123.694 l
318.716 123.844 l
320.767 123.880 l
322.907 123.809 l
324.872 123.650 l
326.991 123.381 l
329.193 123.000 l
331.109 122.587 l
333.179 122.060 l
335.318 121.432 l
337.410 120.742 l
339.434 120.006 l
341.681 119.117 l
343.700 118.259 l
345.856 117.287 l
347.810 116.361 l
349.946 115.306 l
351.956 114.279 l
354.057 113.174 l
356.111 112.069 l
358.261 110.894 l
360.332 109.749 l
362.450 108.573 l
364.550 107.408 l
366.480 106.343 l
368.692 105.136 l
370.671 104.074 l
372.780 102.967 l
374.799 101.937 l
377.041 100.832 l
378.982 99.9144 l
381.185 98.9212 l
383.193 98.0655 l
385.390 97.1882 l
387.285 96.4840 l
389.444 95.7449 l
391.529 95.0977 l
393.612 94.5189 l
395.688 94.0120 l
397.682 93.5921 l
399.838 93.2131 l
401.893 92.9251 l
404.056 92.6992 l
406.013 92.5626 l
408.177 92.4859 l
410.249 92.4843 l
412.316 92.5509 l
414.475 92.6910 l
416.464 92.8813 l
418.501 93.1344 l
420.750 93.4788 l
422.786 93.8457 l
424.868 94.2714 l
426.986 94.7526 l
428.932 95.2340 l
431.007 95.7845 l
433.066 96.3646 l
435.269 97.0176 l
437.213 97.6174 l
439.455 98.3322 l
441.479 98.9935 l
443.482 99.6590 l
445.635 100.382 l
447.797 101.112 l
449.764 101.776 l
451.853 102.476 l
453.892 103.152 l
456.101 103.871 l
458.014 104.479 l
460.210 105.158 l
462.274 105.774 l
464.319 106.361 l
466.365 106.921 l
468.452 107.464 l
470.665 108.005 l
472.693 108.467 l
474.695 108.890 l
476.836 109.305 l
478.971 109.679 l
480.985 109.994 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
64.0000 6.01670 420.985 476.983 rc
0.243137 0.341176 0.541176 RG
newpath
67.0680 104.013 m
67.1360 305.021 l
67.2040 298.662 l
67.2720 298.677 l
67.4081 298.662 l
67.5441 298.667 l
67.8162 298.666 l
68.0882 298.664 l
68.6324 298.657 l
69.1765 298.647 l
70.1234 298.622 l
71.0704 298.590 l
73.2002 298.484 l
75.3441 298.333 l
77.4778 298.139 l
79.4560 297.918 l
81.5044 297.647 l
83.6228 297.322 l
85.7344 296.952 l
87.9065 296.522 l
89.8196 296.100 l
91.9734 295.577 l
94.1360 294.998 l
96.2201 294.387 l
98.1126 293.787 l
100.363 293.014 l
102.269 292.309 l
104.487 291.426 l
106.449 290.587 l
108.603 289.602 l
110.654 288.598 l
112.794 287.480 l
114.759 286.387 l
116.878 285.133 l
119.080 283.745 l
120.996 282.462 l
123.066 280.994 l
125.204 279.385 l
127.296 277.714 l
129.320 276.003 l
131.568 273.987 l
133.587 272.068 l
135.743 269.899 l
137.697 267.821 l
139.833 265.423 l
141.843 263.038 l
143.944 260.406 l
145.998 257.689 l
148.148 254.684 l
150.219 251.627 l
152.337 248.329 l
154.437 244.879 l
156.367 241.544 l
158.579 237.519 l
160.557 233.730 l
162.667 229.486 l
164.686 225.220 l
166.927 220.244 l
168.869 215.726 l
171.072 210.358 l
173.080 205.242 l
175.277 199.399 l
177.172 194.152 l
179.330 187.947 l
181.415 181.727 l
183.499 175.298 l
185.575 168.693 l
187.569 162.176 l
189.725 154.961 l
191.780 147.947 l
193.942 140.451 l
195.900 133.597 l
198.063 125.986 l
200.136 118.707 l
202.203 111.504 l
204.362 104.099 l
206.351 97.4380 l
208.388 90.8276 l
210.636 83.8423 l
212.673 77.8597 l
214.755 72.1327 l
216.872 66.7663 l
218.819 62.2817 l
220.894 58.0108 l
222.953 54.3219 l
225.156 51.0067 l
227.099 48.6349 l
229.342 46.5472 l
231.366 45.2541 l
232.367 44.8176 l
233.368 44.5128 l
234.445 44.3285 l
235.522 44.2893 l
236.603 44.3914 l
237.684 44.6305 l
238.667 44.9626 l
239.651 45.3996 l
241.740 46.6554 l
243.778 48.2757 l
245.988 50.4222 l
247.900 52.5654 l
250.097 55.3052 l
252.161 58.1069 l
254.206 61.0548 l
256.252 64.1387 l
258.339 67.3841 l
260.551 70.8952 l
262.580 74.1467 l
264.582 77.3597 l
266.722 80.7721 l
268.858 84.1306 l
270.775 87.0881 l
273.046 90.5030 l
274.946 93.2739 l
277.168 96.4020 l
279.289 99.2632 l
281.183 101.708 l
283.313 104.328 l
285.457 106.822 l
287.591 109.156 l
289.569 111.186 l
291.617 113.151 l
293.736 115.036 l
295.847 116.764 l
298.019 118.386 l
299.932 119.686 l
302.086 121.004 l
304.249 122.176 l
306.333 123.164 l
308.225 123.942 l
310.476 124.724 l
312.382 125.266 l
314.600 125.761 l
316.563 126.080 l
318.716 126.306 l
320.767 126.403 l
322.907 126.385 l
324.872 126.265 l
326.991 126.028 l
329.193 125.668 l
331.109 125.264 l
333.179 124.737 l
335.318 124.098 l
337.410 123.384 l
339.434 122.616 l
341.681 121.679 l
343.700 120.766 l
345.856 119.723 l
347.810 118.723 l
349.946 117.575 l
351.956 116.449 l
354.057 115.230 l
356.111 114.004 l
358.261 112.690 l
360.332 111.402 l
362.450 110.071 l
364.550 108.742 l
366.480 107.521 l
368.692 106.128 l
370.671 104.895 l
372.780 103.600 l
374.799 102.388 l
377.041 101.080 l
378.982 99.9862 l
381.185 98.7944 l
383.193 97.7607 l
385.390 96.6935 l
387.285 95.8306 l
389.444 94.9182 l
391.529 94.1124 l
393.612 93.3850 l
395.688 92.7411 l
397.682 92.2009 l
399.838 91.7052 l
401.893 91.3196 l
404.056 91.0060 l
406.013 90.8037 l
408.177 90.6697 l
410.249 90.6283 l
412.316 90.6699 l
414.475 90.7992 l
416.464 90.9931 l
418.501 91.2629 l
420.750 91.6401 l
422.786 92.0491 l
424.868 92.5290 l
426.986 93.0760 l
428.932 93.6266 l
431.007 94.2590 l
433.066 94.9277 l
435.269 95.6824 l
437.213 96.3770 l
439.455 97.2057 l
441.479 97.9733 l
443.482 98.7462 l
445.635 99.5869 l
447.797 100.435 l
449.764 101.206 l
451.853 102.020 l
453.892 102.804 l
456.101 103.640 l
458.014 104.346 l
460.210 105.134 l
462.274 105.850 l
464.319 106.531 l
466.365 107.183 l
468.452 107.813 l
470.665 108.442 l
472.693 108.980 l
474.695 109.474 l
476.836 109.959 l
478.971 110.397 l
480.985 110.768 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
67.0000 104.013 m
480.985 104.013 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
257 129 32 17 rc
newpath
266.718 133.968 m
264.921 140.218 l
265.640 139.593 l
266.432 138.927 266.947 138.432 267.187 138.109  c
267.260 138.005 267.296 137.927 267.296 137.875  c
267.296 137.833 267.281 137.796 267.250 137.765  c
267.229 137.734 267.182 137.708 267.109 137.687  c
267.036 137.666 266.906 137.656 266.718 137.656  c
266.500 137.656 l
266.562 137.406 l
269.343 137.406 l
269.281 137.656 l
268.958 137.666 268.682 137.713 268.453 137.796  c
268.224 137.880 268.000 138.000 267.781 138.156  c
267.354 138.479 267.072 138.703 266.937 138.828  c
266.390 139.312 l
266.484 139.614 266.599 140.036 266.734 140.578  c
266.963 141.484 267.119 142.020 267.203 142.187  c
267.286 142.364 267.369 142.453 267.453 142.453  c
267.526 142.453 267.609 142.416 267.703 142.343  c
267.921 142.177 268.156 141.921 268.406 141.578  c
268.625 141.734 l
268.166 142.307 267.812 142.687 267.562 142.875  c
267.322 143.062 267.099 143.156 266.890 143.156  c
266.713 143.156 266.578 143.083 266.484 142.937  c
266.317 142.687 266.036 141.703 265.640 139.984  c
264.765 140.750 l
264.125 143.000 l
263.125 143.000 l
265.234 135.750 l
265.406 135.140 l
265.427 135.036 265.437 134.942 265.437 134.859  c
265.437 134.755 265.395 134.671 265.312 134.609  c
265.239 134.536 265.130 134.500 264.984 134.500  c
264.890 134.500 264.739 134.520 264.531 134.562  c
264.531 134.343 l
266.718 133.968 l
h
f
newpath
f
newpath
274.656 139.093 m
274.656 139.291 274.583 139.468 274.437 139.625  c
274.291 139.770 274.114 139.843 273.906 139.843  c
273.739 139.843 273.578 139.776 273.421 139.640  c
273.265 139.505 273.187 139.322 273.187 139.093  c
273.187 138.895 273.255 138.729 273.390 138.593  c
273.536 138.447 273.708 138.375 273.906 138.375  c
274.135 138.375 274.322 138.458 274.468 138.625  c
274.593 138.770 274.656 138.927 274.656 139.093  c
h
f
newpath
281.593 140.406 m
281.593 139.885 281.484 139.401 281.265 138.953  c
281.046 138.505 280.671 138.062 280.140 137.625  c
279.750 137.625 l
279.479 137.625 279.213 137.677 278.953 137.781  c
278.703 137.875 278.479 138.015 278.281 138.203  c
278.125 138.359 277.994 138.578 277.890 138.859  c
277.786 139.130 277.734 139.437 277.734 139.781  c
277.734 140.250 277.817 140.692 277.984 141.109  c
278.151 141.526 278.390 141.890 278.703 142.203  c
278.828 142.328 278.989 142.453 279.187 142.578  c
279.395 142.692 279.609 142.750 279.828 142.750  c
280.224 142.750 280.531 142.666 280.750 142.500  c
280.979 142.322 281.161 142.104 281.296 141.843  c
281.401 141.635 281.474 141.421 281.515 141.203  c
281.567 140.974 281.593 140.708 281.593 140.406  c
h
280.828 137.625 m
280.828 137.640 l
280.984 137.692 281.156 137.786 281.343 137.921  c
281.531 138.057 281.713 138.208 281.890 138.375  c
282.067 138.541 282.224 138.718 282.359 138.906  c
282.505 139.093 282.614 139.265 282.687 139.421  c
282.781 139.599 282.843 139.770 282.875 139.937  c
282.906 140.093 282.921 140.250 282.921 140.406  c
282.921 140.666 282.880 140.921 282.796 141.171  c
282.724 141.411 282.619 141.640 282.484 141.859  c
282.349 142.078 282.177 142.281 281.968 142.468  c
281.770 142.656 281.546 142.817 281.296 142.953  c
281.171 143.005 281.036 143.052 280.890 143.093  c
280.744 143.135 280.593 143.166 280.437 143.187  c
280.291 143.218 280.145 143.239 280.000 143.250  c
279.854 143.260 279.729 143.265 279.625 143.265  c
279.239 143.265 278.864 143.182 278.500 143.015  c
278.145 142.859 277.843 142.656 277.593 142.406  c
277.177 141.989 276.869 141.541 276.671 141.062  c
276.484 140.572 276.390 140.088 276.390 139.609  c
276.390 139.234 276.468 138.875 276.625 138.531  c
276.791 138.187 276.984 137.901 277.203 137.671  c
277.401 137.484 277.619 137.317 277.859 137.171  c
278.109 137.026 278.369 136.906 278.640 136.812  c
278.921 136.708 279.197 136.630 279.468 136.578  c
279.750 136.526 280.010 136.500 280.250 136.500  c
283.640 136.500 l
283.640 137.625 l
280.828 137.625 l
h
f
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 104.013 m
67.0000 109.013 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
204.995 104.013 m
204.995 109.013 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 211.000 125.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -211.000 -125.000 ] concat
newpath
213.515 120.062 m
212.937 121.312 l
209.953 121.312 l
209.296 122.640 l
210.588 122.838 211.614 123.322 212.375 124.093  c
213.020 124.750 213.343 125.531 213.343 126.437  c
213.343 126.958 213.239 127.442 213.031 127.890  c
212.822 128.328 212.557 128.703 212.234 129.015  c
211.911 129.328 211.552 129.578 211.156 129.765  c
210.593 130.036 210.015 130.171 209.421 130.171  c
208.828 130.171 208.395 130.072 208.125 129.875  c
207.854 129.666 207.718 129.442 207.718 129.203  c
207.718 129.067 207.776 128.947 207.890 128.843  c
208.005 128.739 208.145 128.687 208.312 128.687  c
208.437 128.687 208.546 128.708 208.640 128.750  c
208.734 128.781 208.895 128.880 209.125 129.046  c
209.500 129.296 209.875 129.421 210.250 129.421  c
210.822 129.421 211.322 129.208 211.750 128.781  c
212.177 128.343 212.390 127.812 212.390 127.187  c
212.390 126.593 212.197 126.036 211.812 125.515  c
211.427 124.994 210.895 124.593 210.218 124.312  c
209.687 124.093 208.963 123.963 208.046 123.921  c
209.953 120.062 l
213.515 120.062 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
342.990 104.013 m
342.990 109.013 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 349.000 125.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -349.000 -125.000 ] concat
newpath
342.765 121.046 m
345.171 119.859 l
345.421 119.859 l
345.421 128.250 l
345.421 128.802 345.442 129.151 345.484 129.296  c
345.536 129.432 345.635 129.536 345.781 129.609  c
345.927 129.682 346.224 129.724 346.671 129.734  c
346.671 130.000 l
342.937 130.000 l
342.937 129.734 l
343.406 129.724 343.708 129.682 343.843 129.609  c
343.979 129.536 344.072 129.442 344.125 129.328  c
344.177 129.203 344.203 128.843 344.203 128.250  c
344.203 122.890 l
344.203 122.161 344.182 121.697 344.140 121.500  c
344.099 121.343 344.031 121.229 343.937 121.156  c
343.854 121.083 343.750 121.046 343.625 121.046  c
343.437 121.046 343.187 121.119 342.875 121.265  c
342.765 121.046 l
h
349.046 125.093 m
349.046 123.958 349.213 122.984 349.546 122.171  c
349.890 121.349 350.349 120.739 350.921 120.343  c
351.359 120.020 351.812 119.859 352.281 119.859  c
353.041 119.859 353.724 120.250 354.328 121.031  c
355.088 121.989 355.468 123.291 355.468 124.937  c
355.468 126.093 355.302 127.072 354.968 127.875  c
354.635 128.677 354.208 129.260 353.687 129.625  c
353.177 129.989 352.682 130.171 352.203 130.171  c
351.255 130.171 350.468 129.614 349.843 128.500  c
349.312 127.552 349.046 126.416 349.046 125.093  c
h
350.484 125.281 m
350.484 126.645 350.651 127.760 350.984 128.625  c
351.265 129.354 351.682 129.718 352.234 129.718  c
352.494 129.718 352.765 129.599 353.046 129.359  c
353.328 129.119 353.541 128.724 353.687 128.171  c
353.916 127.328 354.031 126.140 354.031 124.609  c
354.031 123.484 353.911 122.541 353.671 121.781  c
353.505 121.218 353.281 120.822 353.000 120.593  c
352.802 120.427 352.557 120.343 352.265 120.343  c
351.942 120.343 351.651 120.494 351.390 120.796  c
351.036 121.203 350.796 121.843 350.671 122.718  c
350.546 123.583 350.484 124.437 350.484 125.281  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
480.985 104.013 m
480.985 109.013 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 487.000 125.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -487.000 -125.000 ] concat
newpath
480.765 121.046 m
483.171 119.859 l
483.421 119.859 l
483.421 128.250 l
483.421 128.802 483.442 129.151 483.484 129.296  c
483.536 129.432 483.635 129.536 483.781 129.609  c
483.927 129.682 484.224 129.724 484.671 129.734  c
484.671 130.000 l
480.937 130.000 l
480.937 129.734 l
481.406 129.724 481.708 129.682 481.843 129.609  c
481.979 129.536 482.072 129.442 482.125 129.328  c
482.177 129.203 482.203 128.843 482.203 128.250  c
482.203 122.890 l
482.203 122.161 482.182 121.697 482.140 121.500  c
482.099 121.343 482.031 121.229 481.937 121.156  c
481.854 121.083 481.750 121.046 481.625 121.046  c
481.437 121.046 481.187 121.119 480.875 121.265  c
480.765 121.046 l
h
493.015 120.062 m
492.437 121.312 l
489.453 121.312 l
488.796 122.640 l
490.088 122.838 491.114 123.322 491.875 124.093  c
492.520 124.750 492.843 125.531 492.843 126.437  c
492.843 126.958 492.739 127.442 492.531 127.890  c
492.322 128.328 492.057 128.703 491.734 129.015  c
491.411 129.328 491.052 129.578 490.656 129.765  c
490.093 130.036 489.515 130.171 488.921 130.171  c
488.328 130.171 487.895 130.072 487.625 129.875  c
487.354 129.666 487.218 129.442 487.218 129.203  c
487.218 129.067 487.276 128.947 487.390 128.843  c
487.505 128.739 487.645 128.687 487.812 128.687  c
487.937 128.687 488.046 128.708 488.140 128.750  c
488.234 128.781 488.395 128.880 488.625 129.046  c
489.000 129.296 489.375 129.421 489.750 129.421  c
490.322 129.421 490.822 129.208 491.250 128.781  c
491.677 128.343 491.890 127.812 491.890 127.187  c
491.890 126.593 491.697 126.036 491.312 125.515  c
490.927 124.994 490.395 124.593 489.718 124.312  c
489.187 124.093 488.463 123.963 487.546 123.921  c
489.453 120.062 l
493.015 120.062 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
94.5990 104.013 m
94.5990 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 100.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -100.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
122.198 104.013 m
122.198 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 128.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -128.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
149.797 104.013 m
149.797 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 155.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -155.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
177.396 104.013 m
177.396 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 183.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -183.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
232.594 104.013 m
232.594 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 238.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -238.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
260.193 104.013 m
260.193 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 266.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -266.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
287.792 104.013 m
287.792 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 293.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -293.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
315.391 104.013 m
315.391 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 321.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -321.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
370.589 104.013 m
370.589 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 376.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -376.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
398.188 104.013 m
398.188 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 404.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -404.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
425.787 104.013 m
425.787 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 431.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -431.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
453.386 104.013 m
453.386 106.513 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 459.000 116.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -459.000 -116.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
67.0000 480.000 m
67.0000 10.0166 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 275 35 34 rc
newpath
17.8125 277.968 m
16.0312 284.140 l
16.8020 282.974 17.4010 282.203 17.8281 281.828  c
18.2656 281.442 18.6822 281.250 19.0781 281.250  c
19.2760 281.250 19.4427 281.322 19.5781 281.468  c
19.7135 281.604 19.7812 281.786 19.7812 282.015  c
19.7812 282.296 19.7239 282.635 19.6093 283.031  c
18.8281 285.703 l
18.7343 286.026 18.6875 286.203 18.6875 286.234  c
18.6875 286.296 18.7031 286.349 18.7343 286.390  c
18.7760 286.421 18.8177 286.437 18.8593 286.437  c
18.9114 286.437 18.9739 286.411 19.0468 286.359  c
19.2968 286.171 19.5364 285.911 19.7656 285.578  c
19.9687 285.703 l
19.8229 285.921 19.6197 286.166 19.3593 286.437  c
19.1093 286.708 18.8906 286.895 18.7031 287.000  c
18.5260 287.104 18.3645 287.156 18.2187 287.156  c
18.0625 287.156 17.9322 287.104 17.8281 287.000  c
17.7343 286.906 17.6875 286.781 17.6875 286.625  c
17.6875 286.437 17.7604 286.088 17.9062 285.578  c
18.6406 283.031 l
18.7343 282.718 18.7812 282.474 18.7812 282.296  c
18.7812 282.203 18.7500 282.135 18.6875 282.093  c
18.6354 282.041 18.5677 282.015 18.4843 282.015  c
18.3593 282.015 18.2187 282.062 18.0625 282.156  c
17.7812 282.333 17.4531 282.661 17.0781 283.140  c
16.9739 283.276 16.6354 283.807 16.0625 284.734  c
15.8854 285.026 15.7395 285.349 15.6250 285.703  c
15.2187 287.000 l
14.2656 287.000 l
16.3437 279.734 l
16.5781 278.953 l
16.5781 278.838 16.5312 278.739 16.4375 278.656  c
16.3437 278.572 16.2291 278.531 16.0937 278.531  c
16.0208 278.531 15.9062 278.541 15.7500 278.562  c
15.6250 278.593 l
15.6250 278.343 l
17.8125 277.968 l
h
f
newpath
15.5937 303.406 m
15.5937 302.885 15.4843 302.401 15.2656 301.953  c
15.0468 301.505 14.6718 301.062 14.1406 300.625  c
13.7500 300.625 l
13.4791 300.625 13.2135 300.677 12.9531 300.781  c
12.7031 300.875 12.4791 301.015 12.2812 301.203  c
12.1250 301.359 11.9947 301.578 11.8906 301.859  c
11.7864 302.130 11.7343 302.437 11.7343 302.781  c
11.7343 303.250 11.8177 303.692 11.9843 304.109  c
12.1510 304.526 12.3906 304.890 12.7031 305.203  c
12.8281 305.328 12.9895 305.453 13.1875 305.578  c
13.3958 305.692 13.6093 305.750 13.8281 305.750  c
14.2239 305.750 14.5312 305.666 14.7500 305.500  c
14.9791 305.322 15.1614 305.104 15.2968 304.843  c
15.4010 304.635 15.4739 304.421 15.5156 304.203  c
15.5677 303.974 15.5937 303.708 15.5937 303.406  c
h
14.8281 300.625 m
14.8281 300.640 l
14.9843 300.692 15.1562 300.786 15.3437 300.921  c
15.5312 301.057 15.7135 301.208 15.8906 301.375  c
16.0677 301.541 16.2239 301.718 16.3593 301.906  c
16.5052 302.093 16.6145 302.265 16.6875 302.421  c
16.7812 302.599 16.8437 302.770 16.8750 302.937  c
16.9062 303.093 16.9218 303.250 16.9218 303.406  c
16.9218 303.666 16.8802 303.921 16.7968 304.171  c
16.7239 304.411 16.6197 304.640 16.4843 304.859  c
16.3489 305.078 16.1770 305.281 15.9687 305.468  c
15.7708 305.656 15.5468 305.817 15.2968 305.953  c
15.1718 306.005 15.0364 306.052 14.8906 306.093  c
14.7447 306.135 14.5937 306.166 14.4375 306.187  c
14.2916 306.218 14.1458 306.239 14.0000 306.250  c
13.8541 306.260 13.7291 306.265 13.6250 306.265  c
13.2395 306.265 12.8645 306.182 12.5000 306.015  c
12.1458 305.859 11.8437 305.656 11.5937 305.406  c
11.1770 304.989 10.8697 304.541 10.6718 304.062  c
10.4843 303.572 10.3906 303.088 10.3906 302.609  c
10.3906 302.234 10.4687 301.875 10.6250 301.531  c
10.7916 301.187 10.9843 300.901 11.2031 300.671  c
11.4010 300.484 11.6197 300.317 11.8593 300.171  c
12.1093 300.026 12.3697 299.906 12.6406 299.812  c
12.9218 299.708 13.1979 299.630 13.4687 299.578  c
13.7500 299.526 14.0104 299.500 14.2500 299.500  c
17.6406 299.500 l
17.6406 300.625 l
14.8281 300.625 l
h
f
newpath
f
newpath
20.5156 294.640 m
20.7031 294.192 20.9375 293.849 21.2187 293.609  c
21.5104 293.359 21.8697 293.234 22.2968 293.234  c
22.8281 293.234 23.2343 293.411 23.5156 293.765  c
23.7343 294.015 23.8437 294.286 23.8437 294.578  c
23.8437 295.067 23.5416 295.567 22.9375 296.078  c
23.3437 296.234 23.6510 296.463 23.8593 296.765  c
24.0677 297.057 24.1718 297.406 24.1718 297.812  c
24.1718 298.385 23.9895 298.880 23.6250 299.296  c
23.1458 299.849 22.4583 300.125 21.5625 300.125  c
21.1145 300.125 20.8072 300.067 20.6406 299.953  c
20.4843 299.838 20.4062 299.718 20.4062 299.593  c
20.4062 299.500 20.4427 299.416 20.5156 299.343  c
20.5989 299.270 20.6927 299.234 20.7968 299.234  c
20.8802 299.234 20.9635 299.250 21.0468 299.281  c
21.0989 299.291 21.2239 299.349 21.4218 299.453  c
21.6197 299.557 21.7552 299.619 21.8281 299.640  c
21.9427 299.671 22.0729 299.687 22.2187 299.687  c
22.5416 299.687 22.8281 299.562 23.0781 299.312  c
23.3281 299.052 23.4531 298.744 23.4531 298.390  c
23.4531 298.130 23.3958 297.880 23.2812 297.640  c
23.1979 297.463 23.1041 297.322 23.0000 297.218  c
22.8541 297.093 22.6614 296.979 22.4218 296.875  c
22.1822 296.770 21.9322 296.718 21.6718 296.718  c
21.5156 296.718 l
21.5156 296.562 l
21.7760 296.531 22.0364 296.442 22.2968 296.296  c
22.5572 296.140 22.7447 295.958 22.8593 295.750  c
22.9739 295.531 23.0312 295.291 23.0312 295.031  c
23.0312 294.697 22.9270 294.427 22.7187 294.218  c
22.5104 294.010 22.2500 293.906 21.9375 293.906  c
21.4270 293.906 21.0052 294.177 20.6718 294.718  c
20.5156 294.640 l
h
f
2 J
0 j
newpath
8.50000 291.500 m
27.5000 291.500 l
S
0 J
1 j
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 480.000 m
62.0000 480.000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 55.0000 485.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -55.0000 -485.000 ] concat
q
47 478 9 16 rc
newpath
59.4531 486.890 m
49.5468 486.890 l
49.5468 486.109 l
59.4531 486.109 l
59.4531 486.890 l
h
f
Q
newpath
64.9843 487.343 m
64.9843 488.375 l
63.6406 488.375 l
63.6406 491.000 l
62.4375 491.000 l
62.4375 488.375 l
58.2343 488.375 l
58.2343 487.437 l
62.8437 480.859 l
63.6406 480.859 l
63.6406 487.343 l
64.9843 487.343 l
h
62.4375 487.343 m
62.4375 482.406 l
58.9531 487.343 l
62.4375 487.343 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 386.003 m
62.0000 386.003 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 55.0000 391.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -55.0000 -391.000 ] concat
q
47 384 9 16 rc
newpath
59.4531 392.890 m
49.5468 392.890 l
49.5468 392.109 l
59.4531 392.109 l
59.4531 392.890 l
h
f
Q
newpath
58.7656 388.953 m
59.0468 388.286 59.4010 387.770 59.8281 387.406  c
60.2656 387.041 60.8072 386.859 61.4531 386.859  c
62.2447 386.859 62.8541 387.119 63.2812 387.640  c
63.6041 388.026 63.7656 388.437 63.7656 388.875  c
63.7656 389.604 63.3125 390.354 62.4062 391.125  c
63.0104 391.364 63.4687 391.708 63.7812 392.156  c
64.0937 392.593 64.2500 393.114 64.2500 393.718  c
64.2500 394.572 63.9791 395.312 63.4375 395.937  c
62.7187 396.760 61.6875 397.171 60.3437 397.171  c
59.6666 397.171 59.2083 397.088 58.9687 396.921  c
58.7291 396.755 58.6093 396.578 58.6093 396.390  c
58.6093 396.244 58.6666 396.119 58.7812 396.015  c
58.8958 395.911 59.0312 395.859 59.1875 395.859  c
59.3125 395.859 59.4375 395.880 59.5625 395.921  c
59.6458 395.942 59.8333 396.031 60.1250 396.187  c
60.4270 396.333 60.6302 396.421 60.7343 396.453  c
60.9218 396.505 61.1145 396.531 61.3125 396.531  c
61.8125 396.531 62.2447 396.338 62.6093 395.953  c
62.9843 395.567 63.1718 395.114 63.1718 394.593  c
63.1718 394.208 63.0885 393.833 62.9218 393.468  c
62.7864 393.187 62.6458 392.979 62.5000 392.843  c
62.2916 392.645 62.0000 392.468 61.6250 392.312  c
61.2604 392.156 60.8906 392.078 60.5156 392.078  c
60.2812 392.078 l
60.2812 391.843 l
60.6666 391.802 61.0520 391.666 61.4375 391.437  c
61.8229 391.208 62.1041 390.932 62.2812 390.609  c
62.4583 390.286 62.5468 389.932 62.5468 389.546  c
62.5468 389.046 62.3906 388.640 62.0781 388.328  c
61.7656 388.015 61.3750 387.859 60.9062 387.859  c
60.1458 387.859 59.5104 388.265 59.0000 389.078  c
58.7656 388.953 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 292.006 m
62.0000 292.006 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 55.0000 297.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -55.0000 -297.000 ] concat
q
47 290 9 16 rc
newpath
59.4531 298.890 m
49.5468 298.890 l
49.5468 298.109 l
59.4531 298.109 l
59.4531 298.890 l
h
f
Q
newpath
64.8750 301.093 m
64.1875 303.000 l
58.3281 303.000 l
58.3281 302.734 l
60.0468 301.161 61.2552 299.875 61.9531 298.875  c
62.6614 297.875 63.0156 296.963 63.0156 296.140  c
63.0156 295.515 62.8229 295.000 62.4375 294.593  c
62.0520 294.187 61.5885 293.984 61.0468 293.984  c
60.5677 293.984 60.1302 294.130 59.7343 294.421  c
59.3489 294.703 59.0625 295.119 58.8750 295.671  c
58.6093 295.671 l
58.7343 294.765 59.0468 294.072 59.5468 293.593  c
60.0572 293.104 60.6875 292.859 61.4375 292.859  c
62.2500 292.859 62.9218 293.119 63.4531 293.640  c
63.9947 294.161 64.2656 294.770 64.2656 295.468  c
64.2656 295.968 64.1510 296.474 63.9218 296.984  c
63.5572 297.776 62.9687 298.609 62.1562 299.484  c
60.9479 300.817 60.1875 301.619 59.8750 301.890  c
62.4687 301.890 l
63.0000 301.890 63.3697 301.875 63.5781 301.843  c
63.7968 301.802 63.9895 301.724 64.1562 301.609  c
64.3333 301.484 64.4843 301.312 64.6093 301.093  c
64.8750 301.093 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 198.010 m
62.0000 198.010 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 55.0000 203.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -55.0000 -203.000 ] concat
q
47 196 9 16 rc
newpath
59.4531 204.890 m
49.5468 204.890 l
49.5468 204.109 l
59.4531 204.109 l
59.4531 204.890 l
h
f
Q
newpath
59.7656 200.046 m
62.1718 198.859 l
62.4218 198.859 l
62.4218 207.250 l
62.4218 207.802 62.4427 208.151 62.4843 208.296  c
62.5364 208.432 62.6354 208.536 62.7812 208.609  c
62.9270 208.682 63.2239 208.724 63.6718 208.734  c
63.6718 209.000 l
59.9375 209.000 l
59.9375 208.734 l
60.4062 208.724 60.7083 208.682 60.8437 208.609  c
60.9791 208.536 61.0729 208.442 61.1250 208.328  c
61.1770 208.203 61.2031 207.843 61.2031 207.250  c
61.2031 201.890 l
61.2031 201.161 61.1822 200.697 61.1406 200.500  c
61.0989 200.343 61.0312 200.229 60.9375 200.156  c
60.8541 200.083 60.7500 200.046 60.6250 200.046  c
60.4375 200.046 60.1875 200.119 59.8750 200.265  c
59.7656 200.046 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 104.013 m
62.0000 104.013 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 59.0000 109.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -59.0000 -109.000 ] concat
newpath
56.5468 110.093 m
56.5468 108.958 56.7135 107.984 57.0468 107.171  c
57.3906 106.349 57.8489 105.739 58.4218 105.343  c
58.8593 105.020 59.3125 104.859 59.7812 104.859  c
60.5416 104.859 61.2239 105.250 61.8281 106.031  c
62.5885 106.989 62.9687 108.291 62.9687 109.937  c
62.9687 111.093 62.8020 112.072 62.4687 112.875  c
62.1354 113.677 61.7083 114.260 61.1875 114.625  c
60.6770 114.989 60.1822 115.171 59.7031 115.171  c
58.7552 115.171 57.9687 114.614 57.3437 113.500  c
56.8125 112.552 56.5468 111.416 56.5468 110.093  c
h
57.9843 110.281 m
57.9843 111.645 58.1510 112.760 58.4843 113.625  c
58.7656 114.354 59.1822 114.718 59.7343 114.718  c
59.9947 114.718 60.2656 114.599 60.5468 114.359  c
60.8281 114.119 61.0416 113.724 61.1875 113.171  c
61.4166 112.328 61.5312 111.140 61.5312 109.609  c
61.5312 108.484 61.4114 107.541 61.1718 106.781  c
61.0052 106.218 60.7812 105.822 60.5000 105.593  c
60.3020 105.427 60.0572 105.343 59.7656 105.343  c
59.4427 105.343 59.1510 105.494 58.8906 105.796  c
58.5364 106.203 58.2968 106.843 58.1718 107.718  c
58.0468 108.583 57.9843 109.437 57.9843 110.281  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 10.0166 m
62.0000 10.0166 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 61.0000 15.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -61.0000 -15.0000 ] concat
newpath
59.7656 12.0468 m
62.1718 10.8593 l
62.4218 10.8593 l
62.4218 19.2500 l
62.4218 19.8020 62.4427 20.1510 62.4843 20.2968  c
62.5364 20.4322 62.6354 20.5364 62.7812 20.6093  c
62.9270 20.6822 63.2239 20.7239 63.6718 20.7343  c
63.6718 21.0000 l
59.9375 21.0000 l
59.9375 20.7343 l
60.4062 20.7239 60.7083 20.6822 60.8437 20.6093  c
60.9791 20.5364 61.0729 20.4427 61.1250 20.3281  c
61.1770 20.2031 61.2031 19.8437 61.2031 19.2500  c
61.2031 13.8906 l
61.2031 13.1614 61.1822 12.6979 61.1406 12.5000  c
61.0989 12.3437 61.0312 12.2291 60.9375 12.1562  c
60.8541 12.0833 60.7500 12.0468 60.6250 12.0468  c
60.4375 12.0468 60.1875 12.1197 59.8750 12.2656  c
59.7656 12.0468 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 433.001 m
64.5000 433.001 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 438.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -438.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 339.005 m
64.5000 339.005 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 344.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -344.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 245.008 m
64.5000 245.008 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 250.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -250.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 151.011 m
64.5000 151.011 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 156.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -156.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
67.0000 57.0150 m
64.5000 57.0150 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 62.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -62.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
1 0 500 500 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
