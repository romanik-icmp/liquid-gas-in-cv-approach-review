%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, February 2, 2023 at 1:32:16 AM Eastern European Standard Time
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
500 500 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
500.000 0 l
500.000 500.000 l
0 500.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
1 0 500 500 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] concat
0 0 490 490 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
28.8633 6.01789 456.122 444.982 rc
0.470588 0 0.0549020 RG
newpath
31.8633 245.196 m
34.2246 246.200 l
36.2792 247.003 l
38.5897 247.827 l
40.9156 248.572 l
43.2305 249.229 l
45.3766 249.762 l
47.5988 250.238 l
49.8970 250.647 l
52.1879 250.971 l
54.5443 251.218 l
56.6198 251.362 l
58.9564 251.441 l
61.3025 251.434 l
63.5635 251.344 l
65.6166 251.192 l
68.0580 250.923 l
70.1262 250.622 l
72.5320 250.185 l
74.6615 249.722 l
76.9980 249.132 l
79.2228 248.489 l
81.5442 247.736 l
83.6760 246.970 l
85.9753 246.063 l
88.3638 245.035 l
90.4429 244.068 l
92.6884 242.949 l
95.0082 241.712 l
97.2777 240.424 l
99.4736 239.104 l
101.911 237.555 l
104.102 236.090 l
106.441 234.450 l
108.561 232.898 l
110.878 231.130 l
113.058 229.402 l
115.338 227.529 l
117.566 225.635 l
119.899 223.587 l
122.145 221.555 l
124.443 219.420 l
126.722 217.248 l
128.815 215.207 l
131.215 212.819 l
133.361 210.643 l
135.650 208.284 l
137.840 205.994 l
140.272 203.419 l
142.378 201.166 l
144.769 198.588 l
146.947 196.226 l
149.330 193.634 l
151.386 191.396 l
153.728 188.851 l
155.990 186.403 l
158.250 183.974 l
160.502 181.577 l
162.666 179.302 l
165.005 176.880 l
167.234 174.615 l
169.580 172.283 l
171.704 170.224 l
174.051 168.012 l
176.299 165.963 l
178.542 163.991 l
180.884 162.015 l
183.042 160.276 l
185.251 158.578 l
187.691 156.807 l
189.900 155.301 l
192.159 153.860 l
194.456 152.499 l
196.568 151.344 l
198.819 150.214 l
201.053 149.197 l
203.442 148.226 l
205.551 147.467 l
207.984 146.706 l
210.180 146.124 l
212.352 145.642 l
214.688 145.226 l
217.034 144.913 l
219.168 144.714 l
221.434 144.591 l
223.646 144.553 l
226.043 144.599 l
228.118 144.707 l
230.500 144.905 l
232.740 145.157 l
234.958 145.465 l
237.178 145.827 l
239.442 146.245 l
241.842 146.736 l
244.043 147.225 l
246.215 147.738 l
248.537 148.315 l
250.854 148.916 l
252.934 149.471 l
255.397 150.143 l
257.459 150.714 l
259.870 151.386 l
262.171 152.028 l
264.225 152.598 l
266.536 153.232 l
268.862 153.859 l
271.177 154.468 l
273.323 155.018 l
275.545 155.568 l
277.843 156.115 l
280.134 156.636 l
282.490 157.144 l
284.566 157.567 l
286.902 158.013 l
289.249 158.429 l
291.510 158.797 l
293.563 159.103 l
296.004 159.433 l
298.072 159.681 l
300.478 159.935 l
302.608 160.127 l
304.944 160.305 l
307.169 160.441 l
309.490 160.549 l
311.622 160.618 l
313.921 160.662 l
316.310 160.673 l
318.389 160.657 l
320.634 160.611 l
322.954 160.537 l
325.224 160.437 l
327.420 160.317 l
329.858 160.159 l
332.049 159.995 l
334.388 159.800 l
336.507 159.607 l
338.825 159.379 l
341.005 159.151 l
343.284 158.900 l
345.512 158.644 l
347.845 158.367 l
350.092 158.093 l
352.389 157.807 l
354.668 157.521 l
356.762 157.256 l
359.162 156.953 l
361.308 156.684 l
363.596 156.401 l
365.787 156.135 l
368.219 155.847 l
370.325 155.606 l
372.715 155.343 l
374.894 155.113 l
377.277 154.875 l
379.333 154.682 l
381.674 154.477 l
383.936 154.294 l
386.197 154.127 l
388.449 153.977 l
390.612 153.849 l
392.951 153.730 l
395.180 153.633 l
397.526 153.550 l
399.650 153.493 l
401.997 153.447 l
404.245 153.421 l
406.488 153.413 l
408.831 153.422 l
410.988 153.447 l
413.198 153.487 l
415.637 153.548 l
417.846 153.618 l
420.105 153.704 l
422.403 153.803 l
424.514 153.906 l
426.765 154.026 l
428.999 154.155 l
431.389 154.302 l
433.498 154.438 l
435.931 154.603 l
438.126 154.758 l
440.299 154.914 l
442.635 155.086 l
444.980 155.260 l
447.114 155.419 l
449.381 155.588 l
451.592 155.752 l
453.990 155.927 l
456.064 156.075 l
458.447 156.241 l
460.687 156.392 l
462.905 156.535 l
465.125 156.673 l
467.389 156.805 l
469.789 156.937 l
471.989 157.049 l
474.162 157.152 l
476.484 157.251 l
478.801 157.340 l
480.985 157.413 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
28.8633 6.01789 456.122 444.982 rc
0 0.0549020 0.470588 RG
newpath
31.8633 307.946 m
34.2246 309.092 l
36.2792 310.003 l
38.5897 310.934 l
40.9156 311.770 l
43.2305 312.504 l
45.3766 313.098 l
47.5988 313.626 l
49.8970 314.078 l
52.1879 314.436 l
54.5443 314.708 l
56.6198 314.866 l
58.9564 314.954 l
61.3025 314.946 l
63.5635 314.847 l
65.6166 314.679 l
68.0580 314.384 l
70.1262 314.050 l
72.5320 313.568 l
74.6615 313.054 l
76.9980 312.396 l
79.2228 311.678 l
81.5442 310.831 l
83.6760 309.966 l
85.9753 308.937 l
88.3638 307.762 l
90.4429 306.649 l
92.6884 305.353 l
95.0082 303.909 l
97.2777 302.392 l
99.4736 300.825 l
101.911 298.967 l
104.102 297.191 l
106.441 295.182 l
108.561 293.259 l
110.878 291.045 l
113.058 288.852 l
115.338 286.446 l
117.566 283.979 l
119.899 281.275 l
122.145 278.552 l
124.443 275.646 l
126.722 272.643 l
128.815 269.776 l
131.215 266.366 l
133.361 263.203 l
135.650 259.716 l
137.840 256.267 l
140.272 252.315 l
142.378 248.791 l
144.769 244.680 l
146.947 240.836 l
149.330 236.530 l
151.386 232.736 l
153.728 228.334 l
155.990 224.008 l
158.250 219.622 l
160.502 215.201 l
162.666 210.916 l
165.005 206.255 l
167.234 201.798 l
169.580 197.109 l
171.704 192.880 l
174.051 188.240 l
176.299 183.847 l
178.542 179.531 l
180.884 175.114 l
183.042 171.145 l
185.251 167.196 l
187.691 162.992 l
189.900 159.344 l
192.159 155.785 l
194.456 152.360 l
196.568 149.398 l
198.819 146.449 l
201.053 143.744 l
203.442 141.106 l
205.551 139.005 l
207.984 136.848 l
210.180 135.152 l
212.352 133.708 l
214.688 132.414 l
217.034 131.380 l
219.168 130.665 l
221.434 130.134 l
223.646 129.835 l
226.043 129.743 l
228.118 129.848 l
230.500 130.167 l
232.740 130.645 l
234.958 131.276 l
237.178 132.050 l
239.442 132.972 l
241.842 134.078 l
244.043 135.193 l
246.215 136.375 l
248.537 137.714 l
250.854 139.112 l
252.934 140.409 l
255.397 141.981 l
257.459 143.317 l
259.870 144.889 l
262.171 146.389 l
264.225 147.720 l
266.536 149.197 l
268.862 150.656 l
271.177 152.072 l
273.323 153.345 l
275.545 154.619 l
277.843 155.883 l
280.134 157.084 l
282.490 158.253 l
284.566 159.225 l
286.902 160.251 l
289.249 161.205 l
291.510 162.052 l
293.563 162.757 l
296.004 163.515 l
298.072 164.090 l
300.478 164.679 l
302.608 165.129 l
304.944 165.547 l
307.169 165.872 l
309.490 166.136 l
311.622 166.312 l
313.921 166.433 l
316.310 166.484 l
318.389 166.469 l
320.634 166.392 l
322.954 166.250 l
325.224 166.052 l
327.420 165.807 l
329.858 165.477 l
332.049 165.132 l
334.388 164.718 l
336.507 164.303 l
338.825 163.812 l
341.005 163.316 l
343.284 162.767 l
345.512 162.205 l
347.845 161.593 l
350.092 160.984 l
352.389 160.347 l
354.668 159.704 l
356.762 159.108 l
359.162 158.423 l
361.308 157.811 l
363.596 157.165 l
365.787 156.555 l
368.219 155.892 l
370.325 155.334 l
372.715 154.721 l
374.894 154.186 l
377.277 153.628 l
379.333 153.172 l
381.674 152.686 l
383.936 152.250 l
386.197 151.851 l
388.449 151.490 l
390.612 151.181 l
392.951 150.888 l
395.180 150.650 l
397.526 150.443 l
399.650 150.295 l
401.997 150.174 l
404.245 150.101 l
406.488 150.069 l
408.831 150.077 l
410.988 150.122 l
413.198 150.205 l
415.637 150.335 l
417.846 150.489 l
420.105 150.677 l
422.403 150.900 l
424.514 151.131 l
426.765 151.402 l
428.999 151.693 l
431.389 152.028 l
433.498 152.339 l
435.931 152.716 l
438.126 153.068 l
440.299 153.426 l
442.635 153.818 l
444.980 154.217 l
447.114 154.581 l
449.381 154.968 l
451.592 155.343 l
453.990 155.744 l
456.064 156.084 l
458.447 156.464 l
460.687 156.810 l
462.905 157.139 l
465.125 157.454 l
467.389 157.759 l
469.789 158.062 l
471.989 158.320 l
474.162 158.556 l
476.484 158.785 l
478.801 158.990 l
480.985 159.162 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
28.8633 6.01789 456.122 444.982 rc
0.290196 0.470588 0 RG
newpath
31.8633 351.857 m
34.2246 352.840 l
36.2792 353.619 l
38.5897 354.411 l
40.9156 355.121 l
43.2305 355.742 l
45.3766 356.244 l
47.5988 356.688 l
49.8970 357.069 l
52.1879 357.369 l
54.5443 357.597 l
56.6198 357.730 l
58.9564 357.762 l
61.3025 357.786 l
63.5635 357.714 l
65.6166 357.573 l
68.0580 357.325 l
70.1262 357.045 l
72.5320 356.639 l
74.6615 356.206 l
76.9980 355.651 l
79.2228 355.043 l
81.5442 354.324 l
83.6760 353.587 l
85.9753 352.708 l
88.3638 351.699 l
90.4429 350.740 l
92.6884 349.618 l
95.0082 348.361 l
97.2777 347.033 l
99.4736 345.653 l
101.911 344.007 l
104.102 342.422 l
106.441 340.617 l
108.561 338.875 l
110.878 336.853 l
113.058 334.834 l
115.338 332.597 l
117.566 330.283 l
119.899 327.719 l
122.145 325.109 l
124.443 322.292 l
126.722 319.345 l
128.815 316.498 l
131.215 313.067 l
133.361 309.841 l
135.650 306.233 l
137.840 302.612 l
140.272 298.396 l
142.378 294.574 l
144.769 290.041 l
146.947 285.726 l
149.330 280.803 l
151.386 276.385 l
153.728 271.159 l
155.990 265.917 l
158.250 260.491 l
160.502 254.902 l
162.666 249.368 l
165.005 243.212 l
167.234 237.188 l
169.580 230.696 l
171.704 224.701 l
174.051 217.963 l
176.299 211.421 l
178.542 204.834 l
180.884 197.918 l
183.042 191.546 l
185.251 185.048 l
187.691 177.947 l
189.900 171.623 l
192.159 165.299 l
194.456 159.057 l
196.568 153.524 l
198.819 147.879 l
201.053 142.573 l
203.442 137.263 l
205.551 132.920 l
207.984 128.343 l
210.180 124.635 l
212.352 121.378 l
214.688 118.349 l
217.034 115.807 l
219.168 113.933 l
221.434 112.397 l
223.646 111.338 l
226.043 110.669 l
228.118 110.472 l
230.500 110.662 l
232.740 111.218 l
234.958 112.102 l
237.178 113.288 l
239.442 114.777 l
241.842 116.628 l
244.043 118.537 l
246.215 120.591 l
248.537 122.941 l
250.854 125.413 l
252.934 127.715 l
255.397 130.512 l
257.459 132.890 l
259.870 135.690 l
262.171 138.357 l
264.225 140.720 l
266.536 143.337 l
268.862 145.915 l
271.177 148.409 l
273.323 150.647 l
275.545 152.879 l
277.843 155.087 l
280.134 157.181 l
282.490 159.215 l
284.566 160.902 l
286.902 162.680 l
289.249 164.333 l
291.510 165.798 l
293.563 167.020 l
296.004 168.335 l
298.072 169.334 l
300.478 170.362 l
302.608 171.152 l
304.944 171.893 l
307.169 172.476 l
309.490 172.960 l
311.622 173.294 l
313.921 173.540 l
316.310 173.672 l
318.389 173.688 l
320.634 173.605 l
322.954 173.414 l
325.224 173.128 l
327.420 172.762 l
329.858 172.258 l
332.049 171.723 l
334.388 171.070 l
336.507 170.411 l
338.825 169.624 l
341.005 168.824 l
343.284 167.932 l
345.512 167.011 l
347.845 166.002 l
350.092 164.993 l
352.389 163.930 l
354.668 162.853 l
356.762 161.848 l
359.162 160.685 l
361.308 159.641 l
363.596 158.533 l
365.787 157.481 l
368.219 156.331 l
370.325 155.358 l
372.715 154.283 l
374.894 153.339 l
377.277 152.349 l
379.333 151.537 l
381.674 150.664 l
383.936 149.878 l
386.197 149.153 l
388.449 148.493 l
390.612 147.923 l
392.951 147.377 l
395.180 146.929 l
397.526 146.534 l
399.650 146.246 l
401.997 146.003 l
404.245 145.846 l
406.488 145.761 l
408.831 145.749 l
410.988 145.805 l
413.198 145.926 l
415.637 146.132 l
417.846 146.381 l
420.105 146.694 l
422.403 147.068 l
424.514 147.458 l
426.765 147.918 l
428.999 148.417 l
431.389 148.990 l
433.498 149.525 l
435.931 150.174 l
438.126 150.781 l
440.299 151.399 l
442.635 152.076 l
444.980 152.765 l
447.114 153.396 l
449.381 154.065 l
451.592 154.713 l
453.990 155.406 l
456.064 155.994 l
458.447 156.652 l
460.687 157.250 l
462.905 157.820 l
465.125 158.365 l
467.389 158.893 l
469.789 159.418 l
471.989 159.866 l
474.162 160.275 l
476.484 160.675 l
478.801 161.034 l
480.985 161.334 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
q
28.8633 6.01789 456.122 444.982 rc
0.243137 0.341176 0.541176 RG
newpath
31.8633 382.468 m
34.2246 383.218 l
36.2792 383.810 l
38.5897 384.412 l
40.9156 384.950 l
43.2305 385.421 l
45.3766 385.799 l
47.5988 386.135 l
49.8970 386.422 l
52.1879 386.648 l
54.5443 386.820 l
56.6198 386.919 l
58.9564 386.975 l
61.3025 386.970 l
63.5635 386.907 l
65.6166 386.802 l
68.0580 386.615 l
70.1262 386.404 l
72.5320 386.098 l
74.6615 385.771 l
76.9980 385.351 l
79.2228 384.891 l
81.5442 384.346 l
83.6760 383.786 l
85.9753 383.117 l
88.3638 382.347 l
90.4429 381.613 l
92.6884 380.751 l
95.0082 379.784 l
97.2777 378.758 l
99.4736 377.687 l
101.911 376.405 l
104.102 375.165 l
106.441 373.746 l
108.561 372.370 l
110.878 370.765 l
113.058 369.152 l
115.338 367.356 l
117.566 365.484 l
119.899 363.397 l
122.145 361.256 l
124.443 358.926 l
126.722 356.469 l
128.815 354.076 l
131.215 351.163 l
133.361 348.398 l
135.650 345.273 l
137.840 342.103 l
140.272 338.366 l
142.378 334.937 l
144.769 330.816 l
146.947 326.837 l
149.330 322.231 l
151.386 318.033 l
153.728 312.989 l
155.990 307.841 l
158.250 302.415 l
160.502 296.719 l
162.666 290.969 l
165.005 284.439 l
167.234 277.906 l
169.580 270.702 l
171.704 263.892 l
174.051 256.048 l
176.299 248.233 l
178.542 240.153 l
180.884 231.430 l
183.042 223.164 l
185.251 214.495 l
187.691 204.728 l
189.900 195.753 l
192.159 186.499 l
194.456 177.071 l
196.568 168.451 l
198.819 159.379 l
201.053 150.572 l
203.442 141.455 l
205.551 133.747 l
207.984 125.340 l
210.180 118.279 l
212.352 111.850 l
214.688 105.625 l
217.034 100.150 l
219.168 95.8853 l
221.434 92.1306 l
223.646 89.2496 l
226.043 87.0008 l
227.080 86.3060 l
228.118 85.7761 l
229.309 85.3671 l
230.500 85.1665 l
231.620 85.1624 l
232.740 85.3314 l
233.849 85.6632 l
234.958 86.1521 l
237.178 87.5748 l
239.442 89.5848 l
241.842 92.2585 l
244.043 95.1341 l
246.215 98.3084 l
248.537 102.004 l
250.854 105.939 l
252.934 109.628 l
255.397 114.131 l
257.459 117.966 l
259.870 122.480 l
262.171 126.776 l
264.225 130.572 l
266.536 134.765 l
268.862 138.880 l
271.177 142.845 l
273.323 146.389 l
275.545 149.909 l
277.843 153.380 l
280.134 156.657 l
282.490 159.830 l
284.566 162.454 l
286.902 165.213 l
289.249 167.772 l
291.510 170.039 l
293.563 171.927 l
296.004 173.962 l
298.072 175.509 l
300.478 177.106 l
302.608 178.342 l
304.944 179.508 l
307.169 180.438 l
309.490 181.225 l
311.622 181.785 l
313.921 182.221 l
316.310 182.493 l
318.389 182.585 l
320.634 182.537 l
322.954 182.332 l
325.224 181.985 l
327.420 181.517 l
329.858 180.851 l
332.049 180.128 l
334.388 179.234 l
336.507 178.319 l
338.825 177.214 l
341.005 176.081 l
343.284 174.807 l
345.512 173.481 l
347.845 172.017 l
350.092 170.542 l
352.389 168.977 l
354.668 167.379 l
356.762 165.877 l
359.162 164.129 l
361.308 162.550 l
363.596 160.860 l
365.787 159.246 l
368.219 157.469 l
370.325 155.954 l
372.715 154.272 l
374.894 152.782 l
377.277 151.210 l
379.333 149.911 l
381.674 148.505 l
383.936 147.229 l
386.197 146.042 l
388.449 144.955 l
390.612 144.005 l
392.951 143.088 l
395.180 142.325 l
397.526 141.642 l
399.650 141.133 l
401.997 140.691 l
404.245 140.388 l
406.488 140.202 l
408.831 140.130 l
410.988 140.172 l
413.198 140.319 l
415.637 140.600 l
417.846 140.956 l
420.105 141.414 l
422.403 141.972 l
424.514 142.560 l
426.765 143.259 l
428.999 144.020 l
431.389 144.900 l
433.498 145.725 l
435.931 146.725 l
438.126 147.664 l
440.299 148.619 l
442.635 149.668 l
444.980 150.736 l
447.114 151.713 l
449.381 152.749 l
451.592 153.753 l
453.990 154.827 l
456.064 155.737 l
458.447 156.756 l
460.687 157.682 l
462.905 158.564 l
465.125 159.409 l
467.389 160.226 l
469.789 161.040 l
471.989 161.736 l
474.162 162.373 l
476.484 162.996 l
478.801 163.556 l
480.985 164.026 l
S
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
31.8633 448.000 m
480.985 448.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
254 473 32 17 rc
newpath
263.718 477.968 m
261.921 484.218 l
262.640 483.593 l
263.432 482.927 263.947 482.432 264.187 482.109  c
264.260 482.005 264.296 481.927 264.296 481.875  c
264.296 481.833 264.281 481.796 264.250 481.765  c
264.229 481.734 264.182 481.708 264.109 481.687  c
264.036 481.666 263.906 481.656 263.718 481.656  c
263.500 481.656 l
263.562 481.406 l
266.343 481.406 l
266.281 481.656 l
265.958 481.666 265.682 481.713 265.453 481.796  c
265.224 481.880 265.000 482.000 264.781 482.156  c
264.354 482.479 264.072 482.703 263.937 482.828  c
263.390 483.312 l
263.484 483.614 263.599 484.036 263.734 484.578  c
263.963 485.484 264.119 486.020 264.203 486.187  c
264.286 486.364 264.369 486.453 264.453 486.453  c
264.526 486.453 264.609 486.416 264.703 486.343  c
264.921 486.177 265.156 485.921 265.406 485.578  c
265.625 485.734 l
265.166 486.307 264.812 486.687 264.562 486.875  c
264.322 487.062 264.099 487.156 263.890 487.156  c
263.713 487.156 263.578 487.083 263.484 486.937  c
263.317 486.687 263.036 485.703 262.640 483.984  c
261.765 484.750 l
261.125 487.000 l
260.125 487.000 l
262.234 479.750 l
262.406 479.140 l
262.427 479.036 262.437 478.942 262.437 478.859  c
262.437 478.755 262.395 478.671 262.312 478.609  c
262.239 478.536 262.130 478.500 261.984 478.500  c
261.890 478.500 261.739 478.520 261.531 478.562  c
261.531 478.343 l
263.718 477.968 l
h
f
newpath
f
newpath
271.656 483.093 m
271.656 483.291 271.583 483.468 271.437 483.625  c
271.291 483.770 271.114 483.843 270.906 483.843  c
270.739 483.843 270.578 483.776 270.421 483.640  c
270.265 483.505 270.187 483.322 270.187 483.093  c
270.187 482.895 270.255 482.729 270.390 482.593  c
270.536 482.447 270.708 482.375 270.906 482.375  c
271.135 482.375 271.322 482.458 271.468 482.625  c
271.593 482.770 271.656 482.927 271.656 483.093  c
h
f
newpath
278.593 484.406 m
278.593 483.885 278.484 483.401 278.265 482.953  c
278.046 482.505 277.671 482.062 277.140 481.625  c
276.750 481.625 l
276.479 481.625 276.213 481.677 275.953 481.781  c
275.703 481.875 275.479 482.015 275.281 482.203  c
275.125 482.359 274.994 482.578 274.890 482.859  c
274.786 483.130 274.734 483.437 274.734 483.781  c
274.734 484.250 274.817 484.692 274.984 485.109  c
275.151 485.526 275.390 485.890 275.703 486.203  c
275.828 486.328 275.989 486.453 276.187 486.578  c
276.395 486.692 276.609 486.750 276.828 486.750  c
277.224 486.750 277.531 486.666 277.750 486.500  c
277.979 486.322 278.161 486.104 278.296 485.843  c
278.401 485.635 278.474 485.421 278.515 485.203  c
278.567 484.974 278.593 484.708 278.593 484.406  c
h
277.828 481.625 m
277.828 481.640 l
277.984 481.692 278.156 481.786 278.343 481.921  c
278.531 482.057 278.713 482.208 278.890 482.375  c
279.067 482.541 279.224 482.718 279.359 482.906  c
279.505 483.093 279.614 483.265 279.687 483.421  c
279.781 483.599 279.843 483.770 279.875 483.937  c
279.906 484.093 279.921 484.250 279.921 484.406  c
279.921 484.666 279.880 484.921 279.796 485.171  c
279.724 485.411 279.619 485.640 279.484 485.859  c
279.349 486.078 279.177 486.281 278.968 486.468  c
278.770 486.656 278.546 486.817 278.296 486.953  c
278.171 487.005 278.036 487.052 277.890 487.093  c
277.744 487.135 277.593 487.166 277.437 487.187  c
277.291 487.218 277.145 487.239 277.000 487.250  c
276.854 487.260 276.729 487.265 276.625 487.265  c
276.239 487.265 275.864 487.182 275.500 487.015  c
275.145 486.859 274.843 486.656 274.593 486.406  c
274.177 485.989 273.869 485.541 273.671 485.062  c
273.484 484.572 273.390 484.088 273.390 483.609  c
273.390 483.234 273.468 482.875 273.625 482.531  c
273.791 482.187 273.984 481.901 274.203 481.671  c
274.401 481.484 274.619 481.317 274.859 481.171  c
275.109 481.026 275.369 480.906 275.640 480.812  c
275.921 480.708 276.197 480.630 276.468 480.578  c
276.750 480.526 277.010 480.500 277.250 480.500  c
280.640 480.500 l
280.640 481.625 l
277.828 481.625 l
h
f
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 448.000 m
59.9335 453.000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 66.0000 469.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -66.0000 -469.000 ] concat
newpath
62.5468 469.093 m
62.5468 467.958 62.7135 466.984 63.0468 466.171  c
63.3906 465.349 63.8489 464.739 64.4218 464.343  c
64.8593 464.020 65.3125 463.859 65.7812 463.859  c
66.5416 463.859 67.2239 464.250 67.8281 465.031  c
68.5885 465.989 68.9687 467.291 68.9687 468.937  c
68.9687 470.093 68.8020 471.072 68.4687 471.875  c
68.1354 472.677 67.7083 473.260 67.1875 473.625  c
66.6770 473.989 66.1822 474.171 65.7031 474.171  c
64.7552 474.171 63.9687 473.614 63.3437 472.500  c
62.8125 471.552 62.5468 470.416 62.5468 469.093  c
h
63.9843 469.281 m
63.9843 470.645 64.1510 471.760 64.4843 472.625  c
64.7656 473.354 65.1822 473.718 65.7343 473.718  c
65.9947 473.718 66.2656 473.599 66.5468 473.359  c
66.8281 473.119 67.0416 472.724 67.1875 472.171  c
67.4166 471.328 67.5312 470.140 67.5312 468.609  c
67.5312 467.484 67.4114 466.541 67.1718 465.781  c
67.0052 465.218 66.7812 464.822 66.5000 464.593  c
66.3020 464.427 66.0572 464.343 65.7656 464.343  c
65.4427 464.343 65.1510 464.494 64.8906 464.796  c
64.5364 465.203 64.2968 465.843 64.1718 466.718  c
64.0468 467.583 63.9843 468.437 63.9843 469.281  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
200.284 448.000 m
200.284 453.000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 206.000 469.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -206.000 -469.000 ] concat
newpath
209.515 464.062 m
208.937 465.312 l
205.953 465.312 l
205.296 466.640 l
206.588 466.838 207.614 467.322 208.375 468.093  c
209.020 468.750 209.343 469.531 209.343 470.437  c
209.343 470.958 209.239 471.442 209.031 471.890  c
208.822 472.328 208.557 472.703 208.234 473.015  c
207.911 473.328 207.552 473.578 207.156 473.765  c
206.593 474.036 206.015 474.171 205.421 474.171  c
204.828 474.171 204.395 474.072 204.125 473.875  c
203.854 473.666 203.718 473.442 203.718 473.203  c
203.718 473.067 203.776 472.947 203.890 472.843  c
204.005 472.739 204.145 472.687 204.312 472.687  c
204.437 472.687 204.546 472.708 204.640 472.750  c
204.734 472.781 204.895 472.880 205.125 473.046  c
205.500 473.296 205.875 473.421 206.250 473.421  c
206.822 473.421 207.322 473.208 207.750 472.781  c
208.177 472.343 208.390 471.812 208.390 471.187  c
208.390 470.593 208.197 470.036 207.812 469.515  c
207.427 468.994 206.895 468.593 206.218 468.312  c
205.687 468.093 204.963 467.963 204.046 467.921  c
205.953 464.062 l
209.515 464.062 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
340.634 448.000 m
340.634 453.000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 347.000 469.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -347.000 -469.000 ] concat
newpath
340.765 465.046 m
343.171 463.859 l
343.421 463.859 l
343.421 472.250 l
343.421 472.802 343.442 473.151 343.484 473.296  c
343.536 473.432 343.635 473.536 343.781 473.609  c
343.927 473.682 344.224 473.724 344.671 473.734  c
344.671 474.000 l
340.937 474.000 l
340.937 473.734 l
341.406 473.724 341.708 473.682 341.843 473.609  c
341.979 473.536 342.072 473.442 342.125 473.328  c
342.177 473.203 342.203 472.843 342.203 472.250  c
342.203 466.890 l
342.203 466.161 342.182 465.697 342.140 465.500  c
342.099 465.343 342.031 465.229 341.937 465.156  c
341.854 465.083 341.750 465.046 341.625 465.046  c
341.437 465.046 341.187 465.119 340.875 465.265  c
340.765 465.046 l
h
347.046 469.093 m
347.046 467.958 347.213 466.984 347.546 466.171  c
347.890 465.349 348.349 464.739 348.921 464.343  c
349.359 464.020 349.812 463.859 350.281 463.859  c
351.041 463.859 351.724 464.250 352.328 465.031  c
353.088 465.989 353.468 467.291 353.468 468.937  c
353.468 470.093 353.302 471.072 352.968 471.875  c
352.635 472.677 352.208 473.260 351.687 473.625  c
351.177 473.989 350.682 474.171 350.203 474.171  c
349.255 474.171 348.468 473.614 347.843 472.500  c
347.312 471.552 347.046 470.416 347.046 469.093  c
h
348.484 469.281 m
348.484 470.645 348.651 471.760 348.984 472.625  c
349.265 473.354 349.682 473.718 350.234 473.718  c
350.494 473.718 350.765 473.599 351.046 473.359  c
351.328 473.119 351.541 472.724 351.687 472.171  c
351.916 471.328 352.031 470.140 352.031 468.609  c
352.031 467.484 351.911 466.541 351.671 465.781  c
351.505 465.218 351.281 464.822 351.000 464.593  c
350.802 464.427 350.557 464.343 350.265 464.343  c
349.942 464.343 349.651 464.494 349.390 464.796  c
349.036 465.203 348.796 465.843 348.671 466.718  c
348.546 467.583 348.484 468.437 348.484 469.281  c
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
480.985 448.000 m
480.985 453.000 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 487.000 469.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -487.000 -469.000 ] concat
newpath
480.765 465.046 m
483.171 463.859 l
483.421 463.859 l
483.421 472.250 l
483.421 472.802 483.442 473.151 483.484 473.296  c
483.536 473.432 483.635 473.536 483.781 473.609  c
483.927 473.682 484.224 473.724 484.671 473.734  c
484.671 474.000 l
480.937 474.000 l
480.937 473.734 l
481.406 473.724 481.708 473.682 481.843 473.609  c
481.979 473.536 482.072 473.442 482.125 473.328  c
482.177 473.203 482.203 472.843 482.203 472.250  c
482.203 466.890 l
482.203 466.161 482.182 465.697 482.140 465.500  c
482.099 465.343 482.031 465.229 481.937 465.156  c
481.854 465.083 481.750 465.046 481.625 465.046  c
481.437 465.046 481.187 465.119 480.875 465.265  c
480.765 465.046 l
h
493.015 464.062 m
492.437 465.312 l
489.453 465.312 l
488.796 466.640 l
490.088 466.838 491.114 467.322 491.875 468.093  c
492.520 468.750 492.843 469.531 492.843 470.437  c
492.843 470.958 492.739 471.442 492.531 471.890  c
492.322 472.328 492.057 472.703 491.734 473.015  c
491.411 473.328 491.052 473.578 490.656 473.765  c
490.093 474.036 489.515 474.171 488.921 474.171  c
488.328 474.171 487.895 474.072 487.625 473.875  c
487.354 473.666 487.218 473.442 487.218 473.203  c
487.218 473.067 487.276 472.947 487.390 472.843  c
487.505 472.739 487.645 472.687 487.812 472.687  c
487.937 472.687 488.046 472.708 488.140 472.750  c
488.234 472.781 488.395 472.880 488.625 473.046  c
489.000 473.296 489.375 473.421 489.750 473.421  c
490.322 473.421 490.822 473.208 491.250 472.781  c
491.677 472.343 491.890 471.812 491.890 471.187  c
491.890 470.593 491.697 470.036 491.312 469.515  c
490.927 468.994 490.395 468.593 489.718 468.312  c
489.187 468.093 488.463 467.963 487.546 467.921  c
489.453 464.062 l
493.015 464.062 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
31.8633 448.000 m
31.8633 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 37.0000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -37.0000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
88.0036 448.000 m
88.0036 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 94.0000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -94.0000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
116.073 448.000 m
116.073 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 122.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -122.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
144.143 448.000 m
144.143 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 150.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -150.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
172.214 448.000 m
172.214 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 178.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -178.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
228.354 448.000 m
228.354 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 234.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -234.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
256.424 448.000 m
256.424 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 262.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -262.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
284.494 448.000 m
284.494 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 290.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -290.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
312.564 448.000 m
312.564 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 318.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -318.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
368.705 448.000 m
368.705 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 374.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -374.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
396.775 448.000 m
396.775 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 402.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -402.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
424.845 448.000 m
424.845 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 430.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -430.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
452.915 448.000 m
452.915 450.500 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 458.000 460.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -458.000 -460.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
59.9335 448.000 m
59.9335 10.0178 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 220 26 18 rc
newpath
8.81250 226.250 m
8.00000 229.125 l
8.36458 228.447 8.67708 227.937 8.93750 227.593  c
9.33333 227.072 9.72395 226.692 10.1093 226.453  c
10.3281 226.317 10.5625 226.250 10.8125 226.250  c
11.0208 226.250 11.1927 226.317 11.3281 226.453  c
11.4739 226.588 11.5468 226.765 11.5468 226.984  c
11.5468 227.192 11.5000 227.463 11.4062 227.796  c
10.9531 229.406 l
11.6406 228.114 12.2916 227.208 12.9062 226.687  c
13.2500 226.395 13.5885 226.250 13.9218 226.250  c
14.1197 226.250 14.2812 226.317 14.4062 226.453  c
14.5312 226.588 14.5937 226.796 14.5937 227.078  c
14.5937 227.317 14.5572 227.578 14.4843 227.859  c
13.7812 230.328 l
13.6250 230.859 13.5468 231.156 13.5468 231.218  c
13.5468 231.281 13.5677 231.333 13.6093 231.375  c
13.6406 231.406 13.6770 231.421 13.7187 231.421  c
13.7604 231.421 13.8333 231.380 13.9375 231.296  c
14.1770 231.109 14.4010 230.864 14.6093 230.562  c
14.8281 230.687 l
14.7239 230.864 14.5364 231.099 14.2656 231.390  c
13.9947 231.682 13.7604 231.885 13.5625 232.000  c
13.3750 232.104 13.2031 232.156 13.0468 232.156  c
12.9010 232.156 12.7760 232.104 12.6718 232.000  c
12.5781 231.895 12.5312 231.770 12.5312 231.625  c
12.5312 231.427 12.6145 231.020 12.7812 230.406  c
13.3593 228.359 l
13.4947 227.890 13.5677 227.630 13.5781 227.578  c
13.5885 227.505 13.5937 227.427 13.5937 227.343  c
13.5937 227.239 13.5677 227.156 13.5156 227.093  c
13.4739 227.041 13.4166 227.015 13.3437 227.015  c
13.1666 227.015 12.9791 227.104 12.7812 227.281  c
12.1979 227.822 11.6510 228.578 11.1406 229.546  c
10.8072 230.182 10.4947 231.000 10.2031 232.000  c
9.25000 232.000 l
10.3281 228.156 l
10.4531 227.739 10.5156 227.463 10.5156 227.328  c
10.5156 227.213 10.4895 227.130 10.4375 227.078  c
10.3958 227.015 10.3385 226.984 10.2656 226.984  c
10.1302 226.984 9.98437 227.036 9.82812 227.140  c
9.57812 227.307 9.25000 227.661 8.84375 228.203  c
8.44791 228.744 8.14062 229.265 7.92187 229.765  c
7.81770 229.994 7.56250 230.739 7.15625 232.000  c
6.21875 232.000 l
7.39062 227.890 l
7.54687 227.359 l
7.57812 227.276 7.59375 227.213 7.59375 227.171  c
7.59375 227.078 7.55208 226.994 7.46875 226.921  c
7.38541 226.849 7.27604 226.812 7.14062 226.812  c
7.08854 226.812 6.93750 226.838 6.68750 226.890  c
6.62500 226.656 l
8.81250 226.250 l
h
f
newpath
19.5781 234.718 m
19.1250 236.000 l
15.2187 236.000 l
15.2187 235.812 l
16.3645 234.770 17.1718 233.916 17.6406 233.250  c
18.1093 232.583 18.3437 231.974 18.3437 231.421  c
18.3437 231.005 18.2135 230.661 17.9531 230.390  c
17.7031 230.119 17.3958 229.984 17.0312 229.984  c
16.7083 229.984 16.4166 230.083 16.1562 230.281  c
15.8958 230.468 15.7083 230.744 15.5937 231.109  c
15.4062 231.109 l
15.4895 230.505 15.6979 230.041 16.0312 229.718  c
16.3645 229.395 16.7864 229.234 17.2968 229.234  c
17.8281 229.234 18.2760 229.411 18.6406 229.765  c
19.0052 230.109 19.1875 230.515 19.1875 230.984  c
19.1875 231.317 19.1093 231.651 18.9531 231.984  c
18.7031 232.515 18.3125 233.072 17.7812 233.656  c
16.9687 234.541 16.4583 235.078 16.2500 235.265  c
17.9843 235.265 l
18.3385 235.265 18.5833 235.255 18.7187 235.234  c
18.8645 235.203 18.9947 235.145 19.1093 235.062  c
19.2239 234.979 19.3229 234.864 19.4062 234.718  c
19.5781 234.718 l
h
f
Q
cliprestore
newpath
0 0 m
0 490.000 l
490.000 490.000 l
490.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 448.000 m
54.9335 448.000 l
S
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 302.006 m
54.9335 302.006 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 47.0000 307.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -47.0000 -307.000 ] concat
newpath
38.5468 308.093 m
38.5468 306.958 38.7135 305.984 39.0468 305.171  c
39.3906 304.349 39.8489 303.739 40.4218 303.343  c
40.8593 303.020 41.3125 302.859 41.7812 302.859  c
42.5416 302.859 43.2239 303.250 43.8281 304.031  c
44.5885 304.989 44.9687 306.291 44.9687 307.937  c
44.9687 309.093 44.8020 310.072 44.4687 310.875  c
44.1354 311.677 43.7083 312.260 43.1875 312.625  c
42.6770 312.989 42.1822 313.171 41.7031 313.171  c
40.7552 313.171 39.9687 312.614 39.3437 311.500  c
38.8125 310.552 38.5468 309.416 38.5468 308.093  c
h
39.9843 308.281 m
39.9843 309.645 40.1510 310.760 40.4843 311.625  c
40.7656 312.354 41.1822 312.718 41.7343 312.718  c
41.9947 312.718 42.2656 312.599 42.5468 312.359  c
42.8281 312.119 43.0416 311.724 43.1875 311.171  c
43.4166 310.328 43.5312 309.140 43.5312 307.609  c
43.5312 306.484 43.4114 305.541 43.1718 304.781  c
43.0052 304.218 42.7812 303.822 42.5000 303.593  c
42.3020 303.427 42.0572 303.343 41.7656 303.343  c
41.4427 303.343 41.1510 303.494 40.8906 303.796  c
40.5364 304.203 40.2968 304.843 40.1718 305.718  c
40.0468 306.583 39.9843 307.437 39.9843 308.281  c
h
47.3750 311.578 m
47.6041 311.578 47.7968 311.661 47.9531 311.828  c
48.1093 311.984 48.1875 312.171 48.1875 312.390  c
48.1875 312.619 48.1093 312.812 47.9531 312.968  c
47.7968 313.125 47.6041 313.203 47.3750 313.203  c
47.1458 313.203 46.9531 313.125 46.7968 312.968  c
46.6406 312.812 46.5625 312.619 46.5625 312.390  c
46.5625 312.161 46.6406 311.968 46.7968 311.812  c
46.9531 311.656 47.1458 311.578 47.3750 311.578  c
h
55.7656 303.062 m
55.1875 304.312 l
52.2031 304.312 l
51.5468 305.640 l
52.8385 305.838 53.8645 306.322 54.6250 307.093  c
55.2708 307.750 55.5937 308.531 55.5937 309.437  c
55.5937 309.958 55.4895 310.442 55.2812 310.890  c
55.0729 311.328 54.8072 311.703 54.4843 312.015  c
54.1614 312.328 53.8020 312.578 53.4062 312.765  c
52.8437 313.036 52.2656 313.171 51.6718 313.171  c
51.0781 313.171 50.6458 313.072 50.3750 312.875  c
50.1041 312.666 49.9687 312.442 49.9687 312.203  c
49.9687 312.067 50.0260 311.947 50.1406 311.843  c
50.2552 311.739 50.3958 311.687 50.5625 311.687  c
50.6875 311.687 50.7968 311.708 50.8906 311.750  c
50.9843 311.781 51.1458 311.880 51.3750 312.046  c
51.7500 312.296 52.1250 312.421 52.5000 312.421  c
53.0729 312.421 53.5729 312.208 54.0000 311.781  c
54.4270 311.343 54.6406 310.812 54.6406 310.187  c
54.6406 309.593 54.4479 309.036 54.0625 308.515  c
53.6770 307.994 53.1458 307.593 52.4687 307.312  c
51.9375 307.093 51.2135 306.963 50.2968 306.921  c
52.2031 303.062 l
55.7656 303.062 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 156.011 m
54.9335 156.011 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 54.0000 161.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -54.0000 -161.000 ] concat
newpath
51.7656 158.046 m
54.1718 156.859 l
54.4218 156.859 l
54.4218 165.250 l
54.4218 165.802 54.4427 166.151 54.4843 166.296  c
54.5364 166.432 54.6354 166.536 54.7812 166.609  c
54.9270 166.682 55.2239 166.724 55.6718 166.734  c
55.6718 167.000 l
51.9375 167.000 l
51.9375 166.734 l
52.4062 166.724 52.7083 166.682 52.8437 166.609  c
52.9791 166.536 53.0729 166.442 53.1250 166.328  c
53.1770 166.203 53.2031 165.843 53.2031 165.250  c
53.2031 159.890 l
53.2031 159.161 53.1822 158.697 53.1406 158.500  c
53.0989 158.343 53.0312 158.229 52.9375 158.156  c
52.8541 158.083 52.7500 158.046 52.6250 158.046  c
52.4375 158.046 52.1875 158.119 51.8750 158.265  c
51.7656 158.046 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 10.0178 m
54.9335 10.0178 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 47.0000 15.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -47.0000 -15.0000 ] concat
newpath
39.7656 12.0468 m
42.1718 10.8593 l
42.4218 10.8593 l
42.4218 19.2500 l
42.4218 19.8020 42.4427 20.1510 42.4843 20.2968  c
42.5364 20.4322 42.6354 20.5364 42.7812 20.6093  c
42.9270 20.6822 43.2239 20.7239 43.6718 20.7343  c
43.6718 21.0000 l
39.9375 21.0000 l
39.9375 20.7343 l
40.4062 20.7239 40.7083 20.6822 40.8437 20.6093  c
40.9791 20.5364 41.0729 20.4427 41.1250 20.3281  c
41.1770 20.2031 41.2031 19.8437 41.2031 19.2500  c
41.2031 13.8906 l
41.2031 13.1614 41.1822 12.6979 41.1406 12.5000  c
41.0989 12.3437 41.0312 12.2291 40.9375 12.1562  c
40.8541 12.0833 40.7500 12.0468 40.6250 12.0468  c
40.4375 12.0468 40.1875 12.1197 39.8750 12.2656  c
39.7656 12.0468 l
h
47.3750 19.5781 m
47.6041 19.5781 47.7968 19.6614 47.9531 19.8281  c
48.1093 19.9843 48.1875 20.1718 48.1875 20.3906  c
48.1875 20.6197 48.1093 20.8125 47.9531 20.9687  c
47.7968 21.1250 47.6041 21.2031 47.3750 21.2031  c
47.1458 21.2031 46.9531 21.1250 46.7968 20.9687  c
46.6406 20.8125 46.5625 20.6197 46.5625 20.3906  c
46.5625 20.1614 46.6406 19.9687 46.7968 19.8125  c
46.9531 19.6562 47.1458 19.5781 47.3750 19.5781  c
h
55.7656 11.0625 m
55.1875 12.3125 l
52.2031 12.3125 l
51.5468 13.6406 l
52.8385 13.8385 53.8645 14.3229 54.6250 15.0937  c
55.2708 15.7500 55.5937 16.5312 55.5937 17.4375  c
55.5937 17.9583 55.4895 18.4427 55.2812 18.8906  c
55.0729 19.3281 54.8072 19.7031 54.4843 20.0156  c
54.1614 20.3281 53.8020 20.5781 53.4062 20.7656  c
52.8437 21.0364 52.2656 21.1718 51.6718 21.1718  c
51.0781 21.1718 50.6458 21.0729 50.3750 20.8750  c
50.1041 20.6666 49.9687 20.4427 49.9687 20.2031  c
49.9687 20.0677 50.0260 19.9479 50.1406 19.8437  c
50.2552 19.7395 50.3958 19.6875 50.5625 19.6875  c
50.6875 19.6875 50.7968 19.7083 50.8906 19.7500  c
50.9843 19.7812 51.1458 19.8802 51.3750 20.0468  c
51.7500 20.2968 52.1250 20.4218 52.5000 20.4218  c
53.0729 20.4218 53.5729 20.2083 54.0000 19.7812  c
54.4270 19.3437 54.6406 18.8125 54.6406 18.1875  c
54.6406 17.5937 54.4479 17.0364 54.0625 16.5156  c
53.6770 15.9947 53.1458 15.5937 52.4687 15.3125  c
51.9375 15.0937 51.2135 14.9635 50.2968 14.9218  c
52.2031 11.0625 l
55.7656 11.0625 l
h
f
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 418.801 m
57.4335 418.801 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 423.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -423.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 389.602 m
57.4335 389.602 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 394.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -394.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 360.403 m
57.4335 360.403 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 365.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -365.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 331.204 m
57.4335 331.204 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 336.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -336.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 272.807 m
57.4335 272.807 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 277.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -277.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 243.608 m
57.4335 243.608 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 248.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -248.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 214.409 m
57.4335 214.409 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 219.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -219.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 185.210 m
57.4335 185.210 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 190.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -190.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 126.813 m
57.4335 126.813 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 131.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -131.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 97.6142 m
57.4335 97.6142 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 102.000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -102.000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 68.4155 m
57.4335 68.4155 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 73.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -73.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
59.9335 39.2166 m
57.4335 39.2166 l
S
[ 1.00000 0 0 1.00000 -6.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 6.00000 44.0000 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -6.00000 -44.0000 ] concat
[ 1.00000 0 0 1.00000 6.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
1 0 500 500 rc
[ 1.00000 0 0 1.00000 1.00000 0 ] concat
[ 1.00000 0 0 1.00000 -1.00000 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
